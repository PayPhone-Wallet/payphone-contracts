// SPDX-License-Identifier: MIT
pragma solidity ^0.8.23;

import { RolesAuthority, Authority } from "solmate/auth/authorities/RolesAuthority.sol";
import { ERC4626, ERC20 } from "solmate/mixins/ERC4626.sol";
import { IERC4626 } from "openzeppelin/interfaces/IERC4626.sol";

//////////////////////////////////////////////////////////////////////////////////////////
// Errors
//////////////////////////////////////////////////////////////////////////////////////////

error YieldVaultZeroAddress();

//////////////////////////////////////////////////////////////////////////////////////////
// Events
//////////////////////////////////////////////////////////////////////////////////////////

// none yet...

contract YieldVaultSponsor is RolesAuthority, ERC4626 {

  ////////////////////////////////////////////////////////////////////////////////////////
  // Variables
  ////////////////////////////////////////////////////////////////////////////////////////

  IERC4626 public immutable yieldVault;

  ////////////////////////////////////////////////////////////////////////////////////////
  // Constructor
  ////////////////////////////////////////////////////////////////////////////////////////

  constructor(
    ERC20 _asset,
    string memory _name,
    string memory _symbol,
    IERC4626 _yieldVault
  ) RolesAuthority(msg.sender, Authority(this)) ERC4626(_asset, _name, _symbol) {
    if (address(0) == address(_yieldVault)) revert YieldVaultZeroAddress();
    yieldVault = _yieldVault;
  }

  ////////////////////////////////////////////////////////////////////////////////////////
  // ERC4626 Overrides
  ////////////////////////////////////////////////////////////////////////////////////////

  /// @inheritdoc ERC4626
  function totalAssets() public view virtual override returns (uint256) {
    return yieldVault.maxWithdraw(address(this));
  }

}
